#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Nov 10 09:42:21 2022

@author: yangjing
"""
#%%练习7.1
import math

def mysqrt(a):
	x = a/2
	while True:
		y = (x + a/x) / 2
		if abs(y-x) < 0.0000000000000000000000001:
			break
		x = y
	return x

	
def test_squre_root(a):
	nat = "{:<4}\t{:<16}\t{:<16}\t{:<16}"
	mat = "{:.1f}\t{:<16}\t{:<16}\t{:<16}"
	print(nat.format('a', 'mysqrt(a)', 'math.sqrt(a)', 'diff'))
	print(nat.format('-', '---------', '------------', '----'))
	for i in range(a):
		my_sqrt = mysqrt(i+1)
		math_sqrt = math.sqrt(i+1)
		diff = abs(my_sqrt - math_sqrt)
		print(mat.format(i+1, my_sqrt, math_sqrt, diff))

 
test_squre_root(9)

#%%练习7.2
def eval_loop():
	e = 38
	while True:
		text = input('Please enter a calculation:')
		if text == 'done':
			break
		e = eval(text)
		print(e)
	print('Done!')
	return e		
	
print(eval_loop())

#%%练习7.3
import math

def factorial(k):
	f = 1
	i = 1
	while True: 
		f = f*i
		i = i + 1
		if i > k:
			break
	return f

def delta(k):
	d = (factorial(4*k)*(1103 + 26390*k)) / ((factorial(k))**4*396**(4*k))
	return d

def xigama():
	i = 0
	x = 0
	while True:
		if delta(i) < 1e-15:
			break
		x = x + delta(i)
		i = i + 1	
	return x
	
def estimate_pi():
	estimate_pi = 9801/(2*math.sqrt(2)*xigama())
	return estimate_pi

print('estimate_pi =',estimate_pi())
print('epsilon =', (math.pi-estimate_pi()))







        
        

