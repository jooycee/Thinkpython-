#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov 12 15:22:25 2022

@author: wangyuanjing
"""

#%%练习10.1
def nested_sum(t):
    total = 0
    for nested in t:
        total += sum(nested)
    return total
t=[[1, 2], [3], [4, 5, 6]]
nested_sum(t)

#%%练习10.2
def cumsum(t):
	t1 = []
	it1 = 0
	for it in t:
		it1 += it
		t1.append(it1)
	return t1

a = [1, 2, 3,]	
print(cumsum(a))

#%%练习10.3
def middle(t):
	t1 = t[1:-1]
	return t1
	
t = [1, 2, 3, 4]
print(middle(t))

#%%练习10.4
def chop(t):
	t.pop(0)
	t.pop(-1)
	
a = [1, 2, 3, 4]
print(chop(a))
print(a)

#%%练习10.5
def is_sorted(t):
	t1 = t[:] # 备份一个列表 t
	t1.sort()
	if t == t1 :
		return True
	return False
	
x = [1, 2, 3]
y = ['a', 'c', 'b']
print(is_sorted(x), is_sorted(y))
print(x, y)

#%%练习10.7
def has_duplicates(t):
	t1 = t[:]
	t1.sort()
	for i in range(len(t1)-1):
		if t1[i] == t1[i + 1]:
			return True
	return False
	
a = [1, 2, 3, 4]
b = [1, 2, 3, 1]
c = [1,[4,5,6],2,3,[4,5,6]]
print(has_duplicates(a))
print(has_duplicates(b))
print(has_duplicates(c))



    


 
    
